
--Cleaning data in SQL Queries



SELECT *
FROM 
Housing

--1    STANDARDIZE THE DATE FORMAT 

SELECT CONVERTED_DATE,CONVERT(DATE,SaleDate)
FROM Housing;
ALTER TABLE HOUSING
ADD CONVERTED_DATE DATE;

UPDATE Housing
SET CONVERTED_DATE = CONVERT(DATE,SaleDate);

ALTER TABLE HOUSING
DROP COLUMN SaleDate;




---2   Populate property address data
SELECT A.ParcelID,A.PropertyAddress,B.PARCELID,B.PROPERTYADDRESS,ISNULL(A.PROPERTYADDRESS,B.PropertyAddress)
FROM Housing A
JOIN Housing B ON A.PARCELID =B.PARCELID
  AND A.UNIQUEID <> B.UNIQUEID
  WHERE A.PropertyAddress IS NULL;
  UPDATE A
  SET PropertyAddress = ISNULL(A.PROPERTYADDRESS,B.PropertyAddress)
  FROM Housing A
JOIN Housing B ON A.PARCELID =B.PARCELID
  AND A.UNIQUEID <> B.UNIQUEID
  WHERE A.PropertyAddress IS NULL;

--3    Breaking out Address into individual columns(Address,City,State)

--UPDATE HOUSING
--SET PROPERTYADDRESS ;
SELECT SUBSTRING(PROPERTYADDRESS,1,CHARINDEX(',',PropertyAddress) -1) AS ADDRESS,
SUBSTRING(PROPERTYADDRESS,CHARINDEX(',',PropertyAddress) +1,LEN(PROPERTYADDRESS)) AS ADDRESS2	
FROM Housing;
ALTER TABLE HOUSING
ADD ADDRESSLIN1 NVARCHAR(255);

UPDATE Housing
SET ADDRESSLIN1 = SUBSTRING(PROPERTYADDRESS,1,CHARINDEX(',',PropertyAddress) -1);
ALTER TABLE HOUSING
ADD ADDRESSLIN2 NVARCHAR(255);

UPDATE Housing
SET ADDRESSLIN2 = SUBSTRING(PROPERTYADDRESS,CHARINDEX(',',PropertyAddress) +1,LEN(PROPERTYADDRESS));


SELECT PARSENAME(REPLACE(OWNERADDRESS,',','.'),3),
PARSENAME(REPLACE(OWNERADDRESS,',','.'),2),
PARSENAME(REPLACE(OWNERADDRESS,',','.'),1)
FROM HOUSING



--4 Change Y and N to Yes and No in 'Sold as vaccant' field

SELECT SOLDASVACANT,
   CASE WHEN SOLDASVACANT ='Y' THEN 'YES'
        WHEN SOLDASVACANT ='N' THEN 'NO'
        ELSE SOLDASVACANT
        END
FROM Housing
UPDATE Housing
SET SOLDASVACANT=   CASE WHEN SOLDASVACANT ='Y' THEN 'YES'
        WHEN SOLDASVACANT ='N' THEN 'NO'
        ELSE SOLDASVACANT
        END
FROM Housing;
SELECT DISTINCT(SOLDASVACANT),COUNT(SOLDASVACANT) CNT
FROM Housing
GROUP BY SOLDASVACANT



--5  REMOVE DUPLICATES

WITH ROLLNUM_CTE AS (
SELECT *,ROW_NUMBER() OVER (PARTITION BY PARCELID,PROPERTYADDRESS,OWNERNAME,SALEPRICE,LEGALREFERENCE ORDER BY UNIQUEID )
                          ROW_NUM
FROM HOUSING
)
SELECT * 
FROM ROLLNUM_CTE
WHERE ROW_NUM > 1
                                 
								
-- 6 DELETE UNSUSED COLUMNS

SELECT * 
FROM HOUSING
ALTER TABLE HOUSING
DROP COLUMN PROPERTYADDRESS,TAXDISTRICT
